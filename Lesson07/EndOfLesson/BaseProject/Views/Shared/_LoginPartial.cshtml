@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <a asp-area="" asp-action="Index" asp-controller="Issue" title="View Issues"><span id="notification-count" class="badge badge-secondary">0</span> New Notifications</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
    @section Scripts
        {
        <script type="text/javascript">
            "use strict";
            const connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();
            let unseenIssueCount = 0;

            connection.on("OnIssueCreated", function (issue) {
                console.log(JSON.stringify(issue));
                unseenIssueCount += 1;
                var li = document.getElementById("notification-count");
                li.textContent = unseenIssueCount;
                document.getElementById("messagesList").appendChild(li);
            });

            connection.start().catch(function (err) {
                return console.error(err.toString());
            });
        </script>

    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}